<?php if (!isset($view)) : ?>
    <?php throw new \Exception('You need to set the $view variable in order to use this script') ?>
<?php endif ?>

<?php $view->scriptalicious()->addSrc('jQuery', '/js/jquery-ui-1.10.4.custom.min.js') ?>
<?php $view->scriptalicious()->addSrc('jquery_form', '/js/jquery.form.js')
    ->addDependency('jquery_form', 'jQuery') ?>

<?php $fileInputName = $this->getService()->getFileInputName() ?>
<?php $formId      = $this->getService()->getFormId() ?>

<?php ob_start()?>
<script type="text/javascript">
var progressInterval;

function getProgress() {
    // Poll our controller action with the progress id
    var url = '/upload_progress.php?id=' + $('#progress_key').val();
    $.getJSON(url, function(data) {
        if (data.status && !data.status.done) {
            var value = Math.floor((data.status.current / data.status.total) * 100);
            showProgress(value, 'Uploading...');
        } else {
            showProgress(100, 'Complete!');
            clearInterval(progressInterval);
        }
    });
}

function gbiliUploaderResetProgress() {
    $('#gbiliuploader-progress .progress-bar').width('0%');
    $('#gbiliuploader-progress > p').html('Nothing to upload');
    gbiliUploaderProgressNormal();
}

function gbiliUploaderProgressUploadedBadFile() {
    $('#gbiliuploader-progress .progress-bar')
        .removeClass('progress-bar-primary')
        .addClass('progress-bar-warning');
}

function gbiliUploaderProgressUploadSuccess() {
    $('#gbiliuploader-progress .progress-bar')
        .removeClass('progress-bar-primary')
        .addClass('progress-bar-success');
}

function gbiliUploaderProgressNormal() {
    $('#gbiliuploader-progress .progress-bar')
        .removeClass('progress-bar-success')
        .removeClass('progress-bar-warning')
        .addClass('progress-bar-primary');
}

function startProgress() {
    showProgress(0, 'Starting upload...');
    progressInterval = setInterval(getProgress, 900);
}

function showProgress(amount, message) {
    $('#gbiliuploader-progress').show();
    $('#gbiliuploader-progress .progress-bar').width(amount + '%');
    $('#gbiliuploader-progress > p').html(message);
}

// TODO XSS 
function showMessages(messages) {
    var message = '';
    <?php //Either add the messages in the popup or in the messages container ?>
    var container = $('#<?= (($this->service->isFormDisplayedAsPopup())? $this->popupDivId : 'messages')?>');

    for( key in messages ) {
        dismissButton = '<button type="button" class="close" data-dismiss="alert" aria-hidden="true">Ã—</button>';
        message = '<div class="alert alert-dismissable alert-' + messages[key].class + '">' + dismissButton + '<p><strong>' + messages[key].fileName + '</strong>: ' + messages[key].message + '</p></div>';
        container.html(container.html() + message);
    }
}

// Clear the file input, otherwise the same file gets re-uploaded
// http://stackoverflow.com/a/1043969
function gbiliUploaderResetFileInput() {
    var fileInput = $('#<?= $fileInputName ?>');
    fileInput.replaceWith(fileInput.val('').clone( true ) );
}

var gbiliUploaderUploadSuccess = function (response) {
    showMessages(response.messages);
};

var gbiliUploaderUploadPartialSuccess = function (response) {
    showMessages(response.messages);
};

var gbiliUploaderUploadFail = function (response) {
    showMessages(response.messages);
};

$(function() {
    // Register a 'submit' event listener on the form to perform the AJAX POST
    $('#<?= $formId ?>').on('submit', function(e) {
        e.preventDefault();

        if ($('#<?= $fileInputName ?>').val() == '') {
            // No files selected, abort
            return;
        }

        // Perform the submit
        //$.fn.ajaxSubmit.debug = true;
        $(this).ajaxSubmit({
            beforeSubmit: function(arr, $form, options) {
                // Notify backend that submit is via ajax
                arr.push({ name: "isAjax", value: "1" });
            },
            success: function (response, statusText, xhr, $form) {
                clearInterval(progressInterval);
                showProgress(100, 'Complete!');

                gbiliUploaderResetFileInput();
                //All files uploaded correctly
                if (1 === response.status) {
                    gbiliUploaderUploadSuccess(response);
                } else if (2 === response.status) {
                    gbiliUploaderUploadPartialSuccess(response);
                } else if (0 === response.status) {
                    gbiliUploaderUploadFail(response);
                } else {
                    alert('Application Error, The response is not well formatted');
                }
            },
            error: function(a, b, c) {
                // NOTE: This callback is *not* called when the form is invalid.
                // It is called when the browser is unable to initiate or complete the ajax submit.
                // You will need to handle validation errors in the 'success' callback.
                console.log(a, b, c);
            }
        });
        // Start the progress polling
        startProgress();
    });
});
</script>
<?php $ajax_file_upload = ob_get_clean() ?>

<?php $view->scriptalicious()->addInline('gbiliuploader_ajax_file_upload', $ajax_file_upload)
           ->addDependency('gbiliuploader_ajax_file_upload', 'jquery_form') ?>
