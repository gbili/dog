<?php $this->scriptalicious()->addSrc('jQuery', '/js/jquery-ui-1.10.4.custom.min.js') ?>

<?php $this->scriptalicious()->addSrc('jquery_form', '/js/jquery.form.js')
    ->addDependency('jquery_form', 'jQuery') ?>

<?php ob_start()?>
<script type="text/javascript">
var progressInterval;

function getProgress() {
    // Poll our controller action with the progress id
    var url = '/upload_progress.php?id=' + $('#progress_key').val();
    $.getJSON(url, function(data) {
        if (data.status && !data.status.done) {
            var value = Math.floor((data.status.current / data.status.total) * 100);
            showProgress(value, 'Uploading...');
        } else {
            showProgress(100, 'Complete!');
            clearInterval(progressInterval);
        }
    });
}

function startProgress() {
    showProgress(0, 'Starting upload...');
    progressInterval = setInterval(getProgress, 900);
}

function showProgress(amount, message) {
    $('#progress').show();
    $('#progress .bar').width(amount + '%');
    $('#progress > p').html(message);
    if (amount < 100) {
        $('#progress .progress')
            .addClass('progress-info active')
            .removeClass('progress-success');
    } else {
        $('#progress .progress')
            .removeClass('progress-info active')
            .addClass('progress-success');
    }
}

// TODO XSS 
function showMessages(messages) {
    var message = '';
    var container = $('#messages');

    for( key in messages ) {
        dismissButton = '<button type="button" class="close" data-dismiss="alert" aria-hidden="true">Ã—</button>';
        message = '<div class="alert alert-dismissable alert-' + messages[key].class + '">' + dismissButton + '<p><strong>' + messages[key].fileName + '</strong>: ' + messages[key].message + '</p></div>';
        container.html(container.html() + message);
    }
}

<?php //TODO this is crap ?>
<?php /* File uploader service may not be set, get it */ ?>
<?php if (!isset($uploaderService)) : ?>
    <?php $uploaderService = $this->uploader()->getService() ?> 
<?php endif ?>

<?php /* Allow script inclusion to override existing behaviour */ ?>
<?php if ($uploaderService->hasIncludeScriptFilePath()) : ?>
    </script>
    <?php include $uploaderService->getIncludeScriptFilePath() ?>    
    <script type="text/javascript">
<?php else : ?>
    var uploadSuccess = function (response) {
        showMessages(response.messages);
    };

    var uploadFail = function (response) {
        showMessages(response.messages);
    };
<?php endif ?>

$(function() {
    // Register a 'submit' event listener on the form to perform the AJAX POST
    $('#<?= $uploaderService->getFormName() ?>').on('submit', function(e) {
        e.preventDefault();

        if ($('#<?= $uploaderService->getFileInputName() ?>').val() == '') {
            // No files selected, abort
            return;
        }

        // Perform the submit
        //$.fn.ajaxSubmit.debug = true;
        $(this).ajaxSubmit({
            beforeSubmit: function(arr, $form, options) {
                // Notify backend that submit is via ajax
                arr.push({ name: "isAjax", value: "1" });
            },
            success: function (response, statusText, xhr, $form) {
                clearInterval(progressInterval);
                showProgress(100, 'Complete!');

                // TODO: You'll need to do some custom logic here to handle a successful
                // form post, and when the form is invalid with validation errors.
                if (response.status) {
                    // TODO: Do something with a successful form post, like redirect
                    // window.location.replace(response.redirect);
                    uploadSuccess(response);
                    // Clear the file input, otherwise the same file gets re-uploaded
                    // http://stackoverflow.com/a/1043969
                    var fileInput = $('#<?= $uploaderService->getFileInputName() ?>');
                    fileInput.replaceWith( fileInput.val('').clone( true ) );
                } else {
                    // Clear the file input, otherwise the same file gets re-uploaded
                    // http://stackoverflow.com/a/1043969
                    var fileInput = $('#<?= $uploaderService->getFileInputName() ?>');
                    fileInput.replaceWith( fileInput.val('').clone( true ) );

                    // TODO: Do something with these errors
                    uploadFail(response);
                }
            },
            error: function(a, b, c) {
                // NOTE: This callback is *not* called when the form is invalid.
                // It is called when the browser is unable to initiate or complete the ajax submit.
                // You will need to handle validation errors in the 'success' callback.
                console.log(a, b, c);
            }
        });
        // Start the progress polling
        startProgress();
    });
});
</script>
<?php $ajax_file_upload = ob_get_clean() ?>

<?php $this->scriptalicious()->addInline('ajax_file_upload', $ajax_file_upload)
            ->addDependency('ajax_file_upload', 'jquery_form') ?>
